import{o as s,c as n,d as a}from"./app.251449cf.js";const e='{"title":"CSS选择器","description":"","frontmatter":{},"headers":[{"level":2,"title":"类型选择器(Type Selector)","slug":"类型选择器-type-selector"},{"level":2,"title":"通用选择器(Universal Selector)","slug":"通用选择器-universal-selector"},{"level":2,"title":"属性选择器(Attribute Selector)","slug":"属性选择器-attribute-selector"},{"level":2,"title":"类选择器(Class Selector)","slug":"类选择器-class-selector"},{"level":2,"title":"ID选择器(ID Selector)","slug":"id选择器-id-selector"},{"level":2,"title":"伪类(Pseudo-classes)","slug":"伪类-pseudo-classes"},{"level":2,"title":"伪元素(Pseudo-elements)","slug":"伪元素-pseudo-elements"},{"level":2,"title":"选择器的连接符","slug":"选择器的连接符"}],"relativePath":"articles/stylesheet/css-selector.md","lastUpdated":1640306902939}',p={},t=a('<h1 id="css选择器"><a class="header-anchor" href="#css选择器" aria-hidden="true">#</a> CSS选择器</h1><p>CSS的常用规则是将一组CSS声明与用选择器定义的条件相关联。其中选择器的熟练使用是尤为重要的。</p><h2 id="类型选择器-type-selector"><a class="header-anchor" href="#类型选择器-type-selector" aria-hidden="true">#</a> 类型选择器(Type Selector)</h2><p>类型选择器就是直接指定元素类型来设置样式, 可用的值与文档中的元素是一一对应的</p><div class="language-css"><pre><code><span class="token comment">/** 设置h1元素的字体颜色为红色 */</span>\n <span class="token selector">h1</span> <span class="token punctuation">{</span>\n   <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n <span class="token punctuation">}</span>\n</code></pre></div><h2 id="通用选择器-universal-selector"><a class="header-anchor" href="#通用选择器-universal-selector" aria-hidden="true">#</a> 通用选择器(Universal Selector)</h2><p>通用选择器就是选择全部元素,用*号表示</p><div class="language-css"><pre><code>  <span class="token selector">*</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</code></pre></div><h2 id="属性选择器-attribute-selector"><a class="header-anchor" href="#属性选择器-attribute-selector" aria-hidden="true">#</a> 属性选择器(Attribute Selector)</h2><p>属性选择器就是用元素的属性作为条件来选中它。语法是一对或多对中括号来表示，一般会与类型选择器组合用。</p><div class="language-css"><pre><code>  <span class="token comment">/** 设置\b拥有class属性的h1元素字体颜色为红色 */</span>\n  <span class="token selector">h1[class]</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">/** 设置\b拥有class和name属性的h2元素字体颜色为红色 */</span>\n  <span class="token selector">h2[class][name]</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</code></pre></div><div class="language-css"><pre><code>  <span class="token comment">/** 设置\b属性class值为”demo“的h1元素字体颜色为红色 */</span>\n  <span class="token selector">h1[class=&quot;demo&quot;]</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">/** 设置class值等于”demo“或者等于test的h1元素字体颜色为红色 */</span>\n  <span class="token selector">h1[class=&quot;demo&quot;]\n  h1[class=&quot;test&quot;]</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</code></pre></div><div class="language-css"><pre><code>  <span class="token comment">/** 设置\b属性class值约等于”demo“的h1元素字体颜色为红色,约等于就是值中包含”demo“字符串就可以，比如class=&quot;demo test&quot;就符合。 */</span>\n  <span class="token selector">h1[class~=&quot;demo&quot;]</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</code></pre></div><div class="language-css"><pre><code>  <span class="token comment">/** 设置\bclass值以”en“开头的h1元素字体颜色为红色，比如class值可以是”en“,&quot;en-US&quot;,&quot;en-scouse&quot;*/</span>\n  <span class="token selector">h1[class!=&quot;en&quot;]</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</code></pre></div><div class="language-css"><pre><code>  <span class="token selector">/** 不使用类型选择器\n  [class=&quot;en&quot;]</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</code></pre></div><p><a href="https://drafts.csswg.org/selectors-3/#attribute-selectors" target="_blank" rel="noopener noreferrer">还有很多种使用方法</a></p><h2 id="类选择器-class-selector"><a class="header-anchor" href="#类选择器-class-selector" aria-hidden="true">#</a> 类选择器(Class Selector)</h2><p>个人认为也属于属性选择器，选择class的值包含指定字符串的元素。语法为.符号加一个字符串.</p><div class="language-css"><pre><code>  <span class="token comment">/** \n   * 设置\bclass值包含”special“的元素字体颜色为红色，比如class值可以是”en“,&quot;en-US&quot;,&quot;en-scouse&quot;\n   * 相当于*.speical ,*[class=&quot;speical&quot;]\n  */</span>\n  <span class="token selector">.speical</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">/** 设置class值包含”special“且包含”demo“的元素字体颜色为红色， 相当于 *[class~=&quot;speical&quot;][class~=&quot;demo&quot;] */</span>\n  <span class="token selector">.speical.demo</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</code></pre></div><h2 id="id选择器-id-selector"><a class="header-anchor" href="#id选择器-id-selector" aria-hidden="true">#</a> ID选择器(ID Selector)</h2><p>跟类选择器一样，是选择id的值包含指定字符串的元素。语法为#符号加字符串</p><div class="language-css"><pre><code> <span class="token comment">/** 设置id属性值等于”user“的元素字体颜色为红色 */</span>\n <span class="token selector">#user</span> <span class="token punctuation">{</span>\n   <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n <span class="token punctuation">}</span>\n</code></pre></div><h2 id="伪类-pseudo-classes"><a class="header-anchor" href="#伪类-pseudo-classes" aria-hidden="true">#</a> 伪类(Pseudo-classes)</h2><p>利用上面的选择器我们已经能筛选到我们想要设置样式的元素，但是更加细微的筛选就做不到了，比如按钮被点击时设置成红色背景，链接被点过后文字设置成灰色，等等。于是有了伪类。语法是:符号跟一个伪类关键字. 伪类只能跟在type selector 和 universal selector的末尾，可放于其它选择器的前后。</p><div class="language-css"><pre><code>  <span class="token comment">/** 鼠标悬停在按钮上时，背景设置为红色 */</span>\n  <span class="token selector">button:hover</span> <span class="token punctuation">{</span>\n    <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token selector">input:hover:focus</span> <span class="token punctuation">{</span>\n    <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token selector">input:hover.special:focus</span> <span class="token punctuation">{</span>\n    <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</code></pre></div><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-classes" target="_blank" rel="noopener noreferrer">标准伪类列表</a></p><h2 id="伪元素-pseudo-elements"><a class="header-anchor" href="#伪元素-pseudo-elements" aria-hidden="true">#</a> 伪元素(Pseudo-elements)</h2><p>还有一些样式要设置的地方，无法用html元素表示出来。就用伪元素来实现。比如文本的第一个字符想要设置成黑体，比如列表元素的前面要加上黑点，等等。语法为::符号加伪元素关键字。早期不知道是CSS协议没严格区分伪类和伪元素 还是 浏览器厂商没做区分，反正现在很多浏览器伪元素也支持:符号加关键字的写法。</p><div class="language-css"><pre><code>  <span class="token comment">/** 设置段落的第一行全部大写 */</span>\n  <span class="token selector">p::first-line</span> <span class="token punctuation">{</span> \n    <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase \n  <span class="token punctuation">}</span>\n</code></pre></div><p>伪类和伪元素有很明显的区分：伪类是筛选出元素的状态，位置等。伪元素是刷选出元素的一部分内容区域。</p><h2 id="选择器的连接符"><a class="header-anchor" href="#选择器的连接符" aria-hidden="true">#</a> 选择器的连接符</h2><ul><li><p>逗号,链接符. 表示声明了多个选择器，会选出符合任意一个选择器的元素。</p><div class="language-css"><pre><code>  <span class="token comment">/** 设置h1和p元素的字体颜色为红色 */</span>\n  <span class="token selector">h1,p</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">/** 设置类名包含”special“,或者类名包含”sub-speicial“的元素字体颜色为红色 */</span>\n  <span class="token selector">.special, .sub-speicial</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token selector">h1, .special, .sub-speicial</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</code></pre></div></li><li><p>空格连接符，表示直接后代元素，可以说是表示父子关系吧。</p><div class="language-css"><pre><code>  <span class="token comment">/** 设置p元素的直接子元素a的字体颜色为红色 */</span>\n  <span class="token selector">p a</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">/** 多层嵌套 */</span>\n  <span class="token selector">p a i</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token selector">p .special</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token selector">p .special i</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> red\n  <span class="token punctuation">}</span>\n</code></pre></div></li><li><p>大于&gt;链接符, 表示子代元素，不必是父子，孙子，重孙子都行。</p><div class="language-css"><pre><code>  <span class="token selector">div &gt; p</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</code></pre></div></li><li><p>加号+链接符，表示两个元素相邻的兄弟元素。注意：只能是紧邻在后面</p><div class="language-css"><pre><code>  <span class="token selector">h1 + p</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token selector">.special + .sub-special</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token selector">.special + p</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</code></pre></div></li><li><p>大约~连接符，表示共父亲的兄弟元素，不必紧邻。</p><div class="language-css"><pre><code>  <span class="token selector">h1 ~ div</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</code></pre></div></li></ul>',32);p.render=function(a,e,p,o,c,l){return s(),n("div",null,[t])};export default p;export{e as __pageData};
